<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="LottieReactPlayerPCF" constructor="LottiePCF" version="0.0.1"
    display-name-key="LottiePCF"
    description-key="A Lottie animation player hosted within power apps" control-type="virtual">
    <!--external-service-usage
    node declares whether this 3rd party PCF control is using external service or not, if yes, this
    control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain
    below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT
      TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects
    from CDS -->
    <property name="AnimationURL" display-name-key="AnimationUEL"
      description-key="The link for the Lottie Animation. This link must end with .json"
      of-type="SingleLine.URL"
      usage="bound" required="true" />
    <property name="autoplay" display-name-key="AutoPlayAnimation"
      description-key="Controls whether or not the animation is playing. " of-type="TwoOptions"
      usage="bound" default-value="true" />
    <property name="playing" display-name-key="PlayAnimation"
      description-key="Controls whether or not the animation is playing. " of-type="TwoOptions"
      usage="bound" default-value="true" />
    <property name="paused" display-name-key="PauseAnimation"
      description-key="Controls whether or not the animation is playing. " of-type="TwoOptions"
      usage="bound" default-value="false" />
    <property name="stopped" display-name-key="StoppedAnimation"
      description-key="Controls whether or not the animation is playing. " of-type="TwoOptions"
      usage="bound" default-value="false" />
    <property name="loop" display-name-key="LoopAnimation"
      description-key="Controls whether or not the animation is playing. " of-type="TwoOptions"
      usage="bound" default-value="true" />
    <property name="disableClickToPause" display-name-key="disableClicktoPause"
      description-key="Controls whether or not the animation is clickable" of-type="TwoOptions"
      usage="bound" default-value="false" />

    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key"
    description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1" />
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/LottiePCF.css" order="1" />
      <resx path="strings/LottiePCF.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>